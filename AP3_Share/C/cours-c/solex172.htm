<html><head>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->
<title>Solutions des exercices de programmation en C - Exercice 10.40</title><link rel="Stylesheet" href="./site.css" type="text/css"></head>
<body background="bgr-solu.gif">
<a href="solex171.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="solex173.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="solex168.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="solex.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="solex_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<hr size="1" width="100%">
<h3>
Exercice 10.40</h3>
 <p>
 

<pre>#include &lt;stdio.h&gt;

main()
{
 /* Prototypes des fonctions appel&eacute;es */
 void ADDITION_MATRICE (int *MAT1, int *MAT2, int L, int C, int CMAX);
 void LIRE_DIM     (int *L, int LMAX, int *C, int CMAX);
 void LIRE_MATRICE   (int *MAT, int L, int C, int CMAX);
 void ECRIRE_MATRICE (int *MAT, int L, int C, int CMAX);
 /* Variables locales */
 /* Les matrices et leurs dimensions */
 int M1[30][30], M2[30][30]; 
 int L, C;       
 /* Traitements */
 LIRE_DIM (&amp;L,30,&amp;C,30);
 printf(&quot;*** Matrice 1 ***\n&quot;);
 LIRE_MATRICE ((int*)M1,L,C,30 );
 printf(&quot;*** Matrice 2 ***\n&quot;);
 LIRE_MATRICE ((int*)M2,L,C,30 );
 printf(&quot;Matrice donn&eacute;e 1 : \n&quot;);
 ECRIRE_MATRICE ((int*)M1,L,C,30);
 printf(&quot;Matrice donn&eacute;e 2 : \n&quot;);
 ECRIRE_MATRICE ((int*)M2,L,C,30);
<b> ADDITION_MATRICE( (int*)M1 , (int*)M2 ,L,C,30);</b>
  printf(&quot;Matrice r&eacute;sultat : \n&quot;);
 ECRIRE_MATRICE ((int*)M1,L,C,30);
 return 0;
}

<b>void ADDITION_MATRICE (int *MAT1, int *MAT2, int L, int C, int CMAX)</b>
<b>{</b>
  /* Variables locales */
 int I,J;
 /* Ajouter les &eacute;l&eacute;ments de MAT2 &agrave; MAT1 */
<b> for (I=0; I&lt;L; I++)</b>
<b>      for (J=0; J&lt;C; J++)</b>
<b>           *(MAT1+I*CMAX+J) += *(MAT2+I*CMAX+J);</b>
<b>}</b>
 
void LIRE_DIM (int *L, int LMAX, int *C, int CMAX)
{
 . . .
}


void LIRE_MATRICE (int *MAT, int L, int C, int CMAX)
{
 . . .
}

void ECRIRE_MATRICE (int *MAT, int L, int C, int CMAX)
{
 . . .
}</pre>
<p>
<p>
<p><hr size="1" width="100%">
<a href="solex171.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="solex173.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="solex168.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="solex.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="solex_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<br><hr size="1" width="100%"><small><a href="prg-c04.htm">Feedback - Copyright &copy</a> 1993,1996,1997 <a href="prg-c02.htm">F.Faber</a></small><p></body></html>