<html><head>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->
<title>Programmation en C - 8.6.1. Les fonctions de &lt;stdio.h&gt;</title><link rel="Stylesheet" href="./site.css" type="text/css"></head>
<body>
<a href="prg-c79.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="prg-c81.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="prg-c79.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="prg-c.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="prg-c_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<hr size="1" width="100%">
<h3>
8.6.1. Les fonctions de &lt;stdio.h&gt;</h3>
<ul>
<li><a href="#Heading165"> Exercice 8.2</a>
<li><a href="#Heading166">Exercice 8.3</a>
<li><a href="#Heading167">Exercice 8.4</a>
</ul>
<hr size="1" width="100%">
 <p>
 <p>
Comme nous l'avons d&eacute;j&agrave; vu au chapitre 4, la biblioth&egrave;que
<i>&lt;stdio&gt;</i> nous offre des fonctions qui effectuent l'entr&eacute;e et
la sortie des donn&eacute;es. A c&ocirc;t&eacute; des fonctions <b>printf</b>
et <b>scanf</b> que nous connaissons d&eacute;j&agrave;, nous y trouvons les
deux fonctions <b>puts</b> et <b>gets,</b> sp&eacute;cialement con&ccedil;ues
pour l'&eacute;criture et la lecture de cha&icirc;nes de caract&egrave;res.<p>
<p>
<b>- Affichage de cha&icirc;nes de caract&egrave;res</b><p>
 <p>
<b>printf</b> avec le sp&eacute;cificateur de format <b>%s</b> permet
d'int&eacute;grer une cha&icirc;ne de caract&egrave;res dans une phrase.<p>
En plus, le sp&eacute;cificateur <b>%s</b> permet l'indication de la largeur
<i>minimale</i> du champ d'affichage. Dans ce champ, les donn&eacute;es sont
justifi&eacute;es &agrave; droite. Si on indique une largeur minimale
n&eacute;gative, la cha&icirc;ne sera justifi&eacute;e &agrave; gauche. Un
nombre suivant un point indique la largeur <i>maximale</i> pour l'affichage.<p>
<p>
<b><i>Exemples</i></b>
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><p>
<tt><b>c</b></tt><tt><b>har NOM[] = &quot;hello, world&quot;;</b></tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt><b>printf(&quot;:%s:&quot;,
NOM);</b></tt>
<br></td>
<td colspan="1" align="left"><tt><b><i>-&gt;</i></b></tt>
<br></td>
<td colspan="1" align="left"><tt><b>:hello,
world:</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt><b>printf(&quot;:%5s:&quot;,
NOM);</b></tt>
<br></td>
<td colspan="1" align="left"><tt><b><i>-&gt;</i></b></tt>
<br></td>
<td colspan="1" align="left"><tt><b>:hello,
world:</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt><b>printf(&quot;:%15s:&quot;,
NOM);</b></tt>
<br></td>
<td colspan="1" align="left"><tt><b><i>-&gt;</i></b></tt>
<br></td>
<td colspan="1" align="left"><tt><b>:&nbsp;&nbsp;&nbsp;hello, world:</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt><b>printf(&quot;:%-15s:&quot;,
NOM);</b></tt>
<br></td>
<td colspan="1" align="left"><tt><b><i>-&gt;</i></b></tt>
<br></td>
<td colspan="1" align="left"><tt><b>:hello,
world&nbsp;&nbsp;&nbsp;:</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt><b>printf(&quot;:%.5s:&quot;,
NOM);</b></tt>
<br></td>
<td colspan="1" align="left"><tt><b><i>-&gt;</i></b></tt>
<br></td>
<td colspan="1" align="left"><tt><b>:hello:</b></tt>
<br></td></tr></table> <p>
<b>puts</b> est id&eacute;ale pour &eacute;crire une cha&icirc;ne constante ou
le contenu d'une variable dans une ligne isol&eacute;e.<p>
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><p>
Syntaxe:
<br></td>
<td colspan="1" align="left"><tt><b>puts(
&lt;Cha&icirc;ne&gt; )</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left">Effet:
<br></td>
<td colspan="1" align="left"><b>puts</b>
&eacute;crit la cha&icirc;ne de caract&egrave;res d&eacute;sign&eacute;e par
&lt;Cha&icirc;ne&gt; sur <i>stdout</i> et provoque un retour &agrave; la ligne.
En pratique, 
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt><b>puts(TXT);</b></tt>
est &eacute;quivalent &agrave; <tt><b>printf(&quot;%s\n&quot;,TXT);</b></tt>
<br></td></tr></table><p>
<b><i>Exemples</i></b>

<pre><b>char TEXTE[] = &quot;Voici une premi&egrave;re ligne.&quot;;
puts(TEXTE);
puts(&quot;Voici une deuxi&egrave;me ligne.&quot;);</b></pre>
<p>
<b>- Lecture de cha&icirc;nes de caract&egrave;res</b><p>
 <p>
<b>scanf</b> avec le sp&eacute;cificateur <b>%s</b> permet de lire un mot
isol&eacute; &agrave; l'int&eacute;rieur d'une suite de donn&eacute;es du
m&ecirc;me ou d'un autre type.<p>
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><p>
Effet:
<br></td>
<td colspan="1" align="left"><b>scanf</b>
avec le sp&eacute;cificateur <tt><b>%s </b></tt>lit un <b><i>mot</i></b> du
fichier d'entr&eacute;e standard <i>stdin</i> et le m&eacute;morise &agrave;
l'adresse qui est associ&eacute;e &agrave; <tt><b>%s</b></tt>.
<br></td></tr></table><p>
<b><i>Exemple</i></b>

<pre><b>char LIEU[25];
int JOUR, MOIS, ANNEE;
printf(&quot;Entrez lieu et date de naissance : \n&quot;);
scanf(&quot;%s %d %d %d&quot;, LIEU, &amp;JOUR, &amp;MOIS, &amp;ANNEE);</b></pre>
 <p>
<b><i>Remarques importantes</i></b><p>
- 	La fonction <b>scanf</b> a besoin des <b><i>adresses de ses
arguments:</i></b><p>
*	Les noms des variables num&eacute;riques (<b>int</b>, <b>char</b>,
<b>long</b>, <b>float</b>, ...) doivent &ecirc;tre marqu&eacute;s par le
symbole <b>'&amp;' </b>(voir chap 4.4.). <p>
<b>*	</b><i>Comme le nom d'une cha&icirc;ne de caract&egrave;res est le
repr&eacute;sentant de l'adresse du premier caract&egrave;re de la
cha&icirc;ne, <b>il ne doit pas &ecirc;tre pr&eacute;c&eacute;d&eacute; de
l'op&eacute;rateur adresse '&amp;' !</b></i> <p>
 <p>
- 	La fonction <b>scanf</b> avec plusieurs arguments pr&eacute;suppose que
l'utilisateur connaisse exactement le nombre et l'ordre des donn&eacute;es
&agrave; introduire! Ainsi, l'utilisation de <b>scanf</b> pour la lecture de
cha&icirc;nes de caract&egrave;res est seulement conseill&eacute;e si on est
forc&eacute; de lire un nombre fix&eacute; de mots en une fois.<p>
<p>
<b>gets</b> est id&eacute;al pour lire une ou plusieurs lignes de texte (p.ex.
des phrases) termin&eacute;es par un retour &agrave; la ligne.
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><p>
Syntaxe:
<br></td>
<td colspan="1" align="left"><tt><b>gets(
&lt;Cha&icirc;ne&gt; )</b></tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left">Effet:
<br></td>
<td colspan="1" align="left"><b>gets</b>
lit une <b><i>ligne</i></b> de de caract&egrave;res de <i>stdin</i> et la copie
&agrave; l'adresse indiqu&eacute;e par &lt;Cha&icirc;ne&gt;. Le retour &agrave;
la ligne final est remplac&eacute; par le symbole de fin de cha&icirc;ne
<b>'<tt>\0</tt>'</b>.
<br></td></tr></table><p>
<b><i>Exemple</i></b>

<pre><b>int MAXI = 1000;
char LIGNE[MAXI];
gets(LIGNE);</b></pre>
<h3>
</h3>

<h4><hr size="2">
<a name="Heading165"> Exercice 8.2</a>
<hr size="1"></h4>
<p>
<p>
Ecrire un programme qui lit 5 mots, s&eacute;par&eacute;s par des espaces et
qui les affiche ensuite dans une ligne, mais dans l'ordre inverse. Les mots
sont m&eacute;moris&eacute;s dans 5 variables M1, ... ,M5.<p>
<b>Exemple</b>

<pre><b>   voici une petite phrase !
   ! phrase petite une voici</b></pre>
<h3>
</h3>

<h4><hr size="2">
<a name="Heading166">Exercice 8.3</a>
<hr size="1"></h4>
<p>
<p>
Ecrire un programme qui lit une ligne de texte (ne d&eacute;passant pas 200
caract&egrave;res) la m&eacute;morise dans une variable TXT et affiche
ensuite:<p>
<b>	a)</b>	la longueur L de la cha&icirc;ne.<p>
<b>	b)</b>	le nombre de <tt>'e'</tt> contenus dans le texte.<p>
<b>	c)</b>	toute la phrase &agrave; rebours, sans changer le contenu de la<br>
variable TXT.<p>
<b>	d)</b>	toute la phrase &agrave; rebours, apr&egrave;s avoir invers&eacute;
l'ordre des <br>		caract&egrave;res dans TXT:

<pre><b>            voici une petite phrase !
            ! esarhp etitep enu iciov</b></pre>

<h3>
</h3>

<h4><hr size="2">
<a name="Heading167">Exercice 8.4</a>
<hr size="1"></h4>
<p>
<p>
Ecrire un programme qui lit un texte TXT (de moins de 200 caract&egrave;res) et
qui enl&egrave;ve toutes les apparitions du charact&egrave;re 'e' en tassant
les &eacute;l&eacute;ments restants. Les modifications se feront dans la
m&ecirc;me variable TXT.<p>
<b>Exemple:</b>

<pre><b>   Cette ligne contient quelques lettres e.
   Ctt lign contint qulqus lttrs .</b></pre>
<p>
<p>
<p>
<p><hr size="1" width="100%">
<a href="prg-c79.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="prg-c81.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="prg-c79.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="prg-c.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="prg-c_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<br><hr size="1" width="100%"><small><a href="prg-c04.htm">Feedback - Copyright &copy</a> 1993,1996,1997 <a href="prg-c02.htm">F.Faber</a></small><p></body></html>