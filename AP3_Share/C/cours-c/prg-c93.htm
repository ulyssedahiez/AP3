<html><head>
<!-- This document was created from RTF source by rtftohtml version 3.0.1 -->
<title>Programmation en C - 9.2.1. Les op&eacute;rateurs de base</title><link rel="Stylesheet" href="./site.css" type="text/css"></head>
<body>
<a href="prg-c92.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="prg-c94.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="prg-c92.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="prg-c.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="prg-c_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<hr size="1" width="100%">
<h3>
9.2.1. Les op&eacute;rateurs de base</h3>
 <p>
 <p>
Lors du travail avec des pointeurs, nous avons besoin<p>
<p>
	-	d'un op&eacute;rateur 'adresse de': <b>&amp;<br></b>			pour obtenir
l'adresse d'une variable.<p>
	-	d'un op&eacute;rateur 'contenu de': <b>*</b> <br>			pour acc&eacute;der au
contenu d'une adresse.<p>
	-	d'une syntaxe de d&eacute;claration<br>			pour pouvoir d&eacute;clarer un
pointeur.<p>
<p>
<b><i>L'op&eacute;rateur 'adresse de' : &amp;</i></b>

<pre><b>&amp;&lt;NomVariable&gt; 
fournit l'adresse de la variable &lt;NomVariable&gt;
</b></pre>
<p>
L'op&eacute;rateur <b>&amp;</b> nous est d&eacute;j&agrave; familier par la
fonction <b>scanf,</b> qui a besoin de l'adresse de ses arguments pour pouvoir
leur attribuer de nouvelles valeurs.<p>
<p>
<b><i>Exemple</i></b>

<pre><b>int N;
printf(&quot;Entrez un nombre entier : &quot;);
scanf(&quot;%d&quot;, &amp;N);</b></pre>
<p>
<b><i>Attention !</i></b><p>
L'op&eacute;rateur <b>&amp;</b> peut seulement &ecirc;tre appliqu&eacute;
&agrave; des objets qui se trouvent dans la m&eacute;moire interne,
c.-&agrave;-d. &agrave; des variables et des tableaux. Il ne peut pas
&ecirc;tre appliqu&eacute; &agrave; des constantes ou des expressions.<p>
<p>
<b><i>Repr&eacute;sentation sch&eacute;matique</i></b><p>
<b> </b>Soit P un pointeur non initialis&eacute;<p>
	
<img src="prg-c43.gif" width="67" height="42"><p>
<p>
et A une variable (du m&ecirc;me type) contenant la valeur 10 :<p>
<p>
	
<img src="prg-c44.gif" width="75" height="42"><p>
<p>
Alors l'instruction

<pre><b>   P = &amp;A;</b></pre>
affecte
l'adresse de la variable A &agrave; la variable P. En m&eacute;moire, A et P se
pr&eacute;sentent comme dans le graphique &agrave; la fin du chapitre 9.1.2.
Dans notre repr&eacute;sentation sch&eacute;matique, nous pouvons illustrer le
fait que 'P pointe sur A' par une fl&egrave;che:<p>
<p>
<img src="prg-c45.gif" width="76" height="106"><p>
<p>
<p>
<center><b><i>L'op&eacute;rateur 'contenu de' : *</i></b><p>
</center>

<pre><b>*&lt;NomPointeur&gt;
d&eacute;signe le contenu de l'adresse r&eacute;f&eacute;renc&eacute;e par le pointeur &lt;NomPointeur&gt;
</b></pre>
<p>
<b><i>Exemple</i></b><p>
Soit A une variable contenant la valeur 10, B une variable contenant la valeur
50 et P un pointeur non initialis&eacute;:<p>
<p>
	
<img src="prg-c46.gif" width="76" height="138"><p>
<p>
Apr&egrave;s les instructions,

<pre><b>   P = &amp;A;
   B = *P;
   *P = 20;
</b></pre>

- P pointe sur A,<p>
	- le contenu de A (r&eacute;f&eacute;renc&eacute; par *P) est affect&eacute;
&agrave; B, et<p>
	- le contenu de A (r&eacute;f&eacute;renc&eacute; par *P) est mis &agrave;
20.<p>
	
<img src="prg-c47.gif" width="76" height="154"><p>
<p>
<b><i>D&eacute;claration d'un pointeur</i></b><p>

<pre><b>&lt;Type&gt; *&lt;NomPointeur&gt; 
d&eacute;clare un pointeur &lt;NomPointeur&gt; qui peut recevoir des adresses de variables du type &lt;Type&gt;
</b></pre>
<p>
Une d&eacute;claration comme 

<pre><b>   int *PNUM; </b></pre>
peut
&ecirc;tre interpr&eacute;t&eacute;e comme suit:<p>
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><p>
<i>&quot;<b>*</b>PNUM est du type <b>int</b>&quot;</i>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left">
ou
<br></td>
<td colspan="1" align="left"><br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><i>&quot;PNUM
est un pointeur sur <b>int</b>&quot;</i>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left">
ou
<br></td>
<td colspan="1" align="left"><br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><i>&quot;PNUM
peut contenir l'adresse d'une variable du type <b>int</b>&quot;</i>
<br></td></tr></table><p>
<b><i>Exemple</i></b><p>
Le programme complet effectuant les transformations de l'exemple ci-dessus peut
se pr&eacute;senter comme suit:<p>
<table>
<tr rowspan="1" align="left">
<td colspan="1" align="left"><p>
<tt>|</tt><tt>main()</tt>
<br></td>
<td colspan="1" align="left">ou
bien
<br></td>
<td colspan="1" align="left"><tt>|main()</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|{</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|{</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
/* d&eacute;clarations */</tt>
<br></td>
<td colspan="1" align="left"><tt>
</tt>
<br></td>
<td colspan="1" align="left"><tt>|/*
d&eacute;clarations */</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
short A = 10;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
short A, B, <b>*P</b>;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
short B = 50;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
/* traitement */</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
<b>short *P</b>;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
A = 10;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
/* traitement */</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
B = 50;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
P = &amp;A;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
P = &amp;A;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
B = *P;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
B = *P;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
*P = 20;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
*P = 20;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|
return 0;</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|
return 0;</tt>
<br></td></tr><tr rowspan="1" align="left">
<td colspan="1" align="left"><tt>|}</tt>
<br></td>
<td colspan="1" align="left"><br></td>
<td colspan="1" align="left"><tt>|}</tt>
<br></td></tr></table><p>
<b><i>Remarque </i></b><p>
Lors de la d&eacute;claration d'un pointeur en C, ce pointeur est li&eacute;
explicitement &agrave; un type de donn&eacute;es. Ainsi, la variable PNUM
d&eacute;clar&eacute;e comme pointeur sur <b>int </b>ne peut pas recevoir
l'adresse d'une variable d'un autre type que <b>int</b>.<p>
Nous allons voir que la limitation d'un pointeur &agrave; un type de variables
n'&eacute;limine pas seulement un grand nombre de sources d'erreurs tr&egrave;s
d&eacute;sagr&eacute;ables, mais permet une s&eacute;rie d'op&eacute;rations
tr&egrave;s pratiques sur les pointeurs (voir 9.3.2.).<p>
<p>
<p><hr size="1" width="100%">
<a href="prg-c92.htm"><img src="./leftg.gif" alt="Previous " border="0" width="30" height="30"></a>
 <a href="prg-c94.htm"><img src="./rightg.gif" alt="Next " border="0" width="30" height="30"></a>
 <a href="prg-c92.htm"><img src="./upg.gif" alt="Up " border="0" width="30" height="30"></a>
 <a href="prg-c.htm"><img src="./topg.gif" alt="Index " border="0" width="30" height="30"></a>
 <a href="prg-c_c.htm"><img src="./contg.gif" alt="Contents " border="0" width="30" height="30"></a>
<br><hr size="1" width="100%"><small><a href="prg-c04.htm">Feedback - Copyright &copy</a> 1993,1996,1997 <a href="prg-c02.htm">F.Faber</a></small><p></body></html>